version: '3.6'

volumes:
#   zookeeper-data:
#     driver: local
#   zookeeper-log:
#     driver: local
#   kafka-data:
#     driver: local
#   local_pgdata:
#     driver: local
#   pgadmin-data:
#     driver: local
  vscode-extensions:

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    # networks:
    #   - dev
    ports:
     # note: localhost:8080 is forwarded within devcontainer.json for convenience
     - "8080:8080"
    # volume for workspace defined in devcontainer.json
    volumes:
      # Use a named volume for the source code
      - ..:/workspace
      # Persist VS Code extensions between rebuilds
      - vscode-extensions:/root/.vscode-server/extensions
    command: sleep infinity

  # akhq:
  #   container_name: akhq
  #   image: tchiotludo/akhq
  #   environment:
  #     AKHQ_CONFIGURATION: |
  #       akhq:
  #         connections:
  #           docker-kafka-server:
  #             properties:
  #               bootstrap.servers: "kafka:9092"
  #   ports:
  #     - 9080:8080
  #   links:
  #     - kafka
  
  # kafka-ui:
  #   image: provectuslabs/kafka-ui
  #   container_name: kafka-ui
  #   ports:
  #    - "18080:8080"
  #   restart: always 
  #   environment:
  #     KAFKA_CLUSTERS_0_NAME: local
  #     KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
  #     KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
  #   depends_on:
  #    - kafka
  #    - zookeeper

  # zookeeper:
  #   container_name: zookeeper
  #   image: confluentinc/cp-zookeeper
  #   volumes:
  #     - zookeeper-data:/var/lib/zookeeper/data:Z
  #     - zookeeper-log:/var/lib/zookeeper/log:Z
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: '2181'
  #     ZOOKEEPER_ADMIN_ENABLE_SERVER: 'false'

  # kafka:
  #   container_name: kafka
  #   image: confluentinc/cp-kafka
  #   ports:
  #     - "9092:9092"
  #     - "9093:9093"
  #   volumes:
  #     - kafka-data:/var/lib/kafka/data:Z
  #   environment:
  #       KAFKA_ADVERTISED_LISTENERS: CLIENT://kafka:9092,EXTERNAL://localhost:9093
  #       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
  #       KAFKA_INTER_BROKER_LISTENER_NAME: CLIENT
  #       KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
  #       KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
  #       KAFKA_BROKER_ID: 1
  #       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #   links:
  #     - zookeeper
  #   depends_on:
  #    - zookeeper

  # db:
  #   container_name: postgresql
  #   image: postgres
  #   restart: always
  #   ports:
  #     - "54320:5432"
  #   environment:
  #     POSTGRES_USER: user
  #     POSTGRES_PASSWORD: admin
  #     POSTGRES_DB: TITANIC
  #   volumes:
  #     - local_pgdata:/var/lib/postgresql/data
  #     - ./init/docker_postgres_init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql

  # pgadmin:
  #   image: dpage/pgadmin4
  #   container_name: pgadmin4
  #   restart: always
  #   ports:
  #     - "5050:80"
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: azureuser@dewc.com
  #     PGADMIN_DEFAULT_PASSWORD: admin
  #   volumes:
  #     - pgadmin-data:/var/lib/pgadmin